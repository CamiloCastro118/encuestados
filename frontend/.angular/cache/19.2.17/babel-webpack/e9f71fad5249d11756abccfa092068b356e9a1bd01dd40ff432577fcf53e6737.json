{"ast":null,"code":"import { CommonModule } from '@angular/common'; // Funciones basicas que se usan siempre\nimport { FormsModule } from '@angular/forms'; // Para poder usar formularios con inputs\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/encuestas.service\";\nimport * as i2 from \"../../services/security.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = () => [1, 2, 3, 4, 5];\nfunction EncuestasComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(\"mensaje-\" + ctx_r0.tipoMensaje);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.mensaje, \" \");\n  }\n}\nfunction EncuestasComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Procesando...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EncuestasComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"small\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Sesi\\u00F3n activa | Tiempo: \", ctx_r0.getTiempoTranscurrido(), \"\");\n  }\n}\nfunction EncuestasComponent_div_4_div_7_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"button\", 24);\n    i0.ɵɵtext(2, \"Completar Encuesta\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EncuestasComponent_div_4_div_7_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"span\", 25);\n    i0.ɵɵtext(2, \"Encuesta vencida\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EncuestasComponent_div_4_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵlistener(\"click\", function EncuestasComponent_div_4_div_7_Template_div_click_0_listener() {\n      const encuesta_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(!ctx_r0.estaVencida(encuesta_r3.fechaLimite) && ctx_r0.seleccionarEncuesta(encuesta_r3));\n    });\n    i0.ɵɵelementStart(1, \"div\", 16)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 17);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 18);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 19)(9, \"div\", 20)(10, \"small\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 21)(14, \"small\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(16, EncuestasComponent_div_4_div_7_div_16_Template, 3, 0, \"div\", 22)(17, EncuestasComponent_div_4_div_7_div_17_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const encuesta_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"vencida\", ctx_r0.estaVencida(encuesta_r3.fechaLimite));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(encuesta_r3.titulo);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(encuesta_r3.estado);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(encuesta_r3.estado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(encuesta_r3.descripcion);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Fecha l\\u00EDmite: \", i0.ɵɵpipeBind2(12, 11, encuesta_r3.fechaLimite, \"dd/MM/yyyy\"), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", encuesta_r3.preguntas.length, \" preguntas\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.estaVencida(encuesta_r3.fechaLimite));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.estaVencida(encuesta_r3.fechaLimite));\n  }\n}\nfunction EncuestasComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"h2\");\n    i0.ɵɵtext(3, \"Encuestas Disponibles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Selecciona una encuesta para completar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 13);\n    i0.ɵɵtemplate(7, EncuestasComponent_div_4_div_7_Template, 18, 14, \"div\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.encuestas);\n  }\n}\nfunction EncuestasComponent_div_5_div_10_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EncuestasComponent_div_5_div_10_div_4_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 44)(1, \"input\", 45);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function EncuestasComponent_div_5_div_10_div_4_label_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const pregunta_r6 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.respuestas[pregunta_r6.id], $event) || (ctx_r0.respuestas[pregunta_r6.id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 46);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r7 = ctx.$implicit;\n    const pregunta_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"name\", \"pregunta_\" + pregunta_r6.id)(\"value\", i_r7);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.respuestas[pregunta_r6.id]);\n    i0.ɵɵproperty(\"required\", pregunta_r6.requerida);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r7);\n  }\n}\nfunction EncuestasComponent_div_5_div_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"div\", 41);\n    i0.ɵɵtemplate(2, EncuestasComponent_div_5_div_10_div_4_label_2_Template, 4, 5, \"label\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 43)(4, \"span\");\n    i0.ɵɵtext(5, \"Muy malo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7, \"Excelente\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nfunction EncuestasComponent_div_5_div_10_div_5_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 49)(1, \"input\", 45);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function EncuestasComponent_div_5_div_10_div_5_label_1_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const pregunta_r6 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.respuestas[pregunta_r6.id], $event) || (ctx_r0.respuestas[pregunta_r6.id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const opcion_r9 = ctx.$implicit;\n    const pregunta_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"name\", \"pregunta_\" + pregunta_r6.id)(\"value\", opcion_r9);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.respuestas[pregunta_r6.id]);\n    i0.ɵɵproperty(\"required\", pregunta_r6.requerida);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(opcion_r9);\n  }\n}\nfunction EncuestasComponent_div_5_div_10_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, EncuestasComponent_div_5_div_10_div_5_label_1_Template, 4, 5, \"label\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pregunta_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", pregunta_r6.opciones);\n  }\n}\nfunction EncuestasComponent_div_5_div_10_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 50)(1, \"textarea\", 51);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function EncuestasComponent_div_5_div_10_div_6_Template_textarea_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const pregunta_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.respuestas[pregunta_r6.id], $event) || (ctx_r0.respuestas[pregunta_r6.id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵtext(2, \"          \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pregunta_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"name\", \"pregunta_\" + pregunta_r6.id);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.respuestas[pregunta_r6.id]);\n    i0.ɵɵproperty(\"required\", pregunta_r6.requerida);\n  }\n}\nfunction EncuestasComponent_div_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"label\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, EncuestasComponent_div_5_div_10_span_3_Template, 2, 0, \"span\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EncuestasComponent_div_5_div_10_div_4_Template, 8, 2, \"div\", 36)(5, EncuestasComponent_div_5_div_10_div_5_Template, 2, 1, \"div\", 37)(6, EncuestasComponent_div_5_div_10_div_6_Template, 3, 3, \"div\", 38);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pregunta_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", pregunta_r6.texto, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", pregunta_r6.requerida);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", pregunta_r6.tipo === \"escala\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", pregunta_r6.tipo === \"multiple\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", pregunta_r6.tipo === \"abierta\");\n  }\n}\nfunction EncuestasComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 27)(2, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function EncuestasComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.volver());\n    });\n    i0.ɵɵtext(3, \"\\u2190 Volver\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"form\", 29, 0);\n    i0.ɵɵlistener(\"ngSubmit\", function EncuestasComponent_div_5_Template_form_ngSubmit_8_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.enviarRespuestas());\n    });\n    i0.ɵɵtemplate(10, EncuestasComponent_div_5_div_10_Template, 7, 5, \"div\", 30);\n    i0.ɵɵelementStart(11, \"div\", 31)(12, \"button\", 32);\n    i0.ɵɵtext(13, \" Enviar Respuestas \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const encuestaForm_r11 = i0.ɵɵreference(9);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.encuestaSeleccionada.titulo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.encuestaSeleccionada.descripcion);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.encuestaSeleccionada.preguntas);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !encuestaForm_r11.form.valid);\n  }\n}\n// En que esta clase es una pagina\nexport let EncuestasComponent = /*#__PURE__*/(() => {\n  class EncuestasComponent {\n    encuestasService;\n    securityService;\n    // Lista de todas las encuestas disponibles\n    encuestas = [];\n    // La encuesta que el usuario esta completando ahora\n    encuestaSeleccionada = null;\n    // Las respuestas que va dando el usuario\n    respuestas = {};\n    // Informacion del usuario que esta usando el sistema\n    usuarioActual = {\n      id: 1,\n      nombre: 'Usuario Demo'\n    };\n    // ID unico de la sesion de seguridad\n    sessionId = '';\n    // Cuando empezo a responder la encuesta (para medir tiempo)\n    tiempoInicio = new Date();\n    // Variables para mostrar el estado de la pantalla\n    cargando = false; // Si esta procesando algo\n    mensaje = ''; // Mensaje para mostrar al usuario\n    tipoMensaje = 'success'; // Color del mensaje\n    // Lista de suscripciones para limpiar al salir\n    subscriptions = [];\n    // solicitamos que servicios necesitamos usar\n    constructor(encuestasService,\n    // Para manejar las encuestas\n    securityService // Para validar seguridad\n    ) {\n      this.encuestasService = encuestasService;\n      this.securityService = securityService;\n    }\n    ngOnInit() {\n      // Cuando se abre la pagina, hacer estas dos cosas:\n      this.inicializarSesion(); // Crear sesion de seguridad\n      this.cargarEncuestas(); // Traer la lista de encuestas\n    }\n    ngOnDestroy() {\n      // Cuando el usuario sale de la pagina, limpiar todo\n      this.subscriptions.forEach(sub => sub.unsubscribe()); // Cancelar suscripciones\n      if (this.sessionId) {\n        this.encuestasService.cerrarSesion(this.usuarioActual.id); // Cerrar sesion\n      }\n    }\n    inicializarSesion() {\n      // Informacion basica para crear la sesion de seguridad\n      const ipAddress = '192.168.1.100'; // En un sistema real esto vendria del servidor\n      const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent : 'Server';\n      // Pedirle al servicio que cree una sesion segura\n      const sub = this.encuestasService.inicializarSesionSegura(this.usuarioActual.id, ipAddress, userAgent).subscribe({\n        next: sessionId => {\n          // Si todo salio bien, guardar el ID de sesion\n          this.sessionId = sessionId;\n        },\n        error: error => {\n          // Si algo salio mal y avisar al usuario\n          this.mostrarMensaje('Error al inicializar sesión: ' + error.message, 'error');\n        }\n      });\n      // Agregar esta suscripcion a la lista para limpiarla despues\n      this.subscriptions.push(sub);\n    }\n    cargarEncuestas() {\n      // Mostrar el indicador de carga mientras se traen los datos\n      this.cargando = true;\n      // Estar pendiente de cuando cambien las encuestas en el servicio\n      const sub = this.encuestasService.encuestas$.subscribe({\n        next: encuestas => {\n          // Cuando lleguen las encuestas, solo mostrar las que estan activas\n          this.encuestas = encuestas.filter(e => e.estado === 'activa');\n          this.cargando = false; // Quitar el indicador de carga\n        },\n        error: error => {\n          // Si algo sale mal, avisar al usuario\n          this.mostrarMensaje('Error al cargar encuestas: ' + error.message, 'error');\n          this.cargando = false;\n        }\n      });\n      // Agregar esta suscripcion a la lista para limpiarla despues\n      this.subscriptions.push(sub);\n    }\n    seleccionarEncuesta(encuesta) {\n      // Verificar que tenemos una sesion valida antes de continuar\n      if (!this.sessionId) {\n        this.mostrarMensaje('Sesión no válida. Recarga la página.', 'error');\n        return;\n      }\n      // Mostrar que estamos trabajando\n      this.cargando = true;\n      // Pedirle al servicio que verifique si el usuario puede hacer esta encuesta\n      const sub = this.encuestasService.validarAccesoEncuestaSegura(this.usuarioActual.id, encuesta.id).subscribe({\n        next: validacion => {\n          this.cargando = false; // Ya termino de verificar\n          if (validacion.isValid) {\n            // Si puede hacer la encuesta, prepararla\n            this.encuestaSeleccionada = encuesta;\n            this.respuestas = {}; // Limpiar respuestas anteriores\n            this.tiempoInicio = new Date(); // Marcar cuando empezo\n            this.mostrarMensaje('Encuesta cargada correctamente', 'success');\n          } else {\n            // Si no puede hacer la encuesta, explicar por que\n            this.mostrarMensaje(validacion.message, validacion.riskLevel === 'high' ? 'error' : 'warning');\n          }\n        },\n        error: error => {\n          this.cargando = false; // Quitar indicador de carga\n          this.mostrarMensaje('Error de validación: ' + error.message, 'error');\n        }\n      });\n      // Agregar esta suscripcion a la lista\n      this.subscriptions.push(sub);\n    }\n    enviarRespuestas() {\n      // Verificar que tenemos todo lo necesario para enviar\n      if (!this.encuestaSeleccionada || !this.sessionId) {\n        this.mostrarMensaje('No hay encuesta seleccionada', 'error');\n        return;\n      }\n      // Revisar que el usuario contesto todas las preguntas importantes\n      const preguntasRequeridas = this.encuestaSeleccionada.preguntas.filter(p => p.requerida);\n      const respuestasVacias = preguntasRequeridas.some(p => !this.respuestas[p.id] || this.respuestas[p.id] === '');\n      if (respuestasVacias) {\n        this.mostrarMensaje('Por favor, responde todas las preguntas requeridas', 'warning');\n        return;\n      }\n      // Mostrar que estamos guardando las respuestas\n      this.cargando = true;\n      // Enviar todas las respuestas al servicio\n      const sub = this.encuestasService.responderEncuestaSegura(this.usuarioActual.id, this.encuestaSeleccionada.id, this.respuestas, this.tiempoInicio).subscribe({\n        next: respuesta => {\n          this.cargando = false; // Ya termino de guardar\n          this.mostrarMensaje('¡Respuesta enviada exitosamente!', 'success');\n          // Esperar un poco y luego limpiar todo para volver al inicio\n          setTimeout(() => {\n            this.encuestaSeleccionada = null; // Quitar encuesta actual\n            this.respuestas = {}; // Limpiar respuestas\n            this.cargarEncuestas(); // Actualizar la lista\n          }, 2000);\n        },\n        error: error => {\n          this.cargando = false; // Quitar indicador de carga\n          this.mostrarMensaje('Error al enviar respuesta: ' + error.message, 'error');\n        }\n      });\n      // Agregar esta suscripcion a la lista\n      this.subscriptions.push(sub);\n    }\n    volver() {\n      // Limpiar todo para volver a la lista de encuestas\n      this.encuestaSeleccionada = null;\n      this.respuestas = {};\n    }\n    mostrarMensaje(texto, tipo) {\n      // Guardar el mensaje para mostrarlo en pantalla\n      this.mensaje = texto;\n      this.tipoMensaje = tipo;\n      // Quitar el mensaje automaticamente despues de 5 segundos\n      setTimeout(() => {\n        this.mensaje = '';\n      }, 5000);\n    }\n    getTiempoTranscurrido() {\n      if (!this.tiempoInicio) return '0:00';\n      const segundos = Math.floor((Date.now() - this.tiempoInicio.getTime()) / 1000);\n      const minutos = Math.floor(segundos / 60);\n      const seg = segundos % 60;\n      return `${minutos}:${seg.toString().padStart(2, '0')}`;\n    }\n    isRespuestaVacia(preguntaId) {\n      return !this.respuestas[preguntaId] || this.respuestas[preguntaId] === '';\n    }\n    estaVencida(fecha) {\n      return new Date() > fecha;\n    }\n    static ɵfac = function EncuestasComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EncuestasComponent)(i0.ɵɵdirectiveInject(i1.EncuestasService), i0.ɵɵdirectiveInject(i2.SecurityService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EncuestasComponent,\n      selectors: [[\"app-encuestas\"]],\n      decls: 6,\n      vars: 5,\n      consts: [[\"encuestaForm\", \"ngForm\"], [1, \"encuestas-container\"], [\"class\", \"mensaje\", 3, \"class\", 4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"session-info\", 4, \"ngIf\"], [\"class\", \"encuestas-lista\", 4, \"ngIf\"], [\"class\", \"encuesta-form\", 4, \"ngIf\"], [1, \"mensaje\"], [1, \"loading\"], [1, \"spinner\"], [1, \"session-info\"], [1, \"encuestas-lista\"], [1, \"header\"], [1, \"encuestas-grid\"], [\"class\", \"encuesta-card\", 3, \"vencida\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"encuesta-card\", 3, \"click\"], [1, \"encuesta-header\"], [1, \"estado\"], [1, \"descripcion\"], [1, \"encuesta-info\"], [1, \"fecha-info\"], [1, \"preguntas-count\"], [\"class\", \"encuesta-footer\", 4, \"ngIf\"], [1, \"encuesta-footer\"], [1, \"btn-completar\"], [1, \"vencida-text\"], [1, \"encuesta-form\"], [1, \"form-header\"], [1, \"btn-volver\", 3, \"click\"], [1, \"preguntas-form\", 3, \"ngSubmit\"], [\"class\", \"pregunta-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-actions\"], [\"type\", \"submit\", 1, \"btn-enviar\", 3, \"disabled\"], [1, \"pregunta-group\"], [1, \"pregunta-label\"], [\"class\", \"requerida\", 4, \"ngIf\"], [\"class\", \"escala-group\", 4, \"ngIf\"], [\"class\", \"multiple-group\", 4, \"ngIf\"], [\"class\", \"abierta-group\", 4, \"ngIf\"], [1, \"requerida\"], [1, \"escala-group\"], [1, \"escala-options\"], [\"class\", \"escala-option\", 4, \"ngFor\", \"ngForOf\"], [1, \"escala-labels\"], [1, \"escala-option\"], [\"type\", \"radio\", 3, \"ngModelChange\", \"name\", \"value\", \"ngModel\", \"required\"], [1, \"escala-number\"], [1, \"multiple-group\"], [\"class\", \"opcion-label\", 4, \"ngFor\", \"ngForOf\"], [1, \"opcion-label\"], [1, \"abierta-group\"], [\"placeholder\", \"Escriba su respuesta aqu\\u00ED...\", \"rows\", \"4\", 3, \"ngModelChange\", \"name\", \"ngModel\", \"required\"]],\n      template: function EncuestasComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵtemplate(1, EncuestasComponent_div_1_Template, 2, 3, \"div\", 2)(2, EncuestasComponent_div_2_Template, 4, 0, \"div\", 3)(3, EncuestasComponent_div_3_Template, 3, 1, \"div\", 4)(4, EncuestasComponent_div_4_Template, 8, 1, \"div\", 5)(5, EncuestasComponent_div_5_Template, 14, 4, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.mensaje);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.cargando);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.sessionId);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.encuestaSeleccionada);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.encuestaSeleccionada);\n        }\n      },\n      dependencies: [CommonModule, i3.NgForOf, i3.NgIf, i3.DatePipe, FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\".encuestas-container[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:20px}.mensaje[_ngcontent-%COMP%]{padding:12px 20px;border-radius:8px;margin-bottom:20px;font-weight:500;animation:_ngcontent-%COMP%_slideDown .3s ease-out}.mensaje-success[_ngcontent-%COMP%]{background-color:#d4edda;color:#155724;border:1px solid #c3e6cb}.mensaje-error[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24;border:1px solid #f5c6cb}.mensaje-warning[_ngcontent-%COMP%]{background-color:#fff3cd;color:#856404;border:1px solid #ffeaa7}.loading[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;padding:40px;margin:20px 0}.spinner[_ngcontent-%COMP%]{width:40px;height:40px;border:4px solid var(--extra-light-blue);border-top:4px solid var(--secondary-blue);border-radius:50%;animation:_ngcontent-%COMP%_spin 1s linear infinite}.loading[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:15px;color:var(--medium-gray);font-weight:500}.session-info[_ngcontent-%COMP%]{background:var(--pale-blue);padding:8px 15px;border-radius:8px;margin-bottom:20px;text-align:center;border:var(--border-light)}.session-info[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{color:var(--primary-blue);font-size:.875rem;font-weight:500}@keyframes _ngcontent-%COMP%_slideDown{0%{opacity:0;transform:translateY(-10px)}to{opacity:1;transform:translateY(0)}}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.header[_ngcontent-%COMP%]{text-align:center;margin-bottom:30px}.header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:var(--primary-blue);margin-bottom:10px;font-size:2.5rem;font-weight:700}.header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:var(--medium-gray);margin:0;font-size:1.1rem}.encuestas-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(350px,1fr));gap:20px}.encuesta-card[_ngcontent-%COMP%]{background:var(--white);border-radius:12px;box-shadow:var(--shadow-light);padding:24px;cursor:pointer;transition:all .3s ease;border:var(--border-light)}.encuesta-card[_ngcontent-%COMP%]:hover:not(.vencida){transform:translateY(-4px);box-shadow:var(--shadow-medium);border-color:var(--light-blue)}.encuesta-card.vencida[_ngcontent-%COMP%]{opacity:.6;cursor:not-allowed;background:var(--light-gray)}.encuesta-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:15px}.encuesta-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0;color:var(--primary-blue);font-size:20px;font-weight:600}.estado[_ngcontent-%COMP%]{padding:4px 8px;border-radius:4px;font-size:12px;font-weight:600;text-transform:uppercase}.estado.activa[_ngcontent-%COMP%]{background:var(--extra-light-blue);color:var(--primary-blue)}.estado.finalizada[_ngcontent-%COMP%]{background:var(--light-gray);color:var(--medium-gray)}.estado.borrador[_ngcontent-%COMP%]{background:var(--pale-blue);color:var(--hover-blue)}.descripcion[_ngcontent-%COMP%]{color:var(--medium-gray);margin-bottom:15px;line-height:1.6}.encuesta-info[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-bottom:15px}.encuesta-info[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{color:var(--medium-gray);font-size:12px;font-weight:500}.btn-completar[_ngcontent-%COMP%]{width:100%;padding:12px;background:var(--secondary-blue);color:var(--white);border:none;border-radius:8px;cursor:pointer;font-weight:600;transition:all .3s ease;box-shadow:var(--shadow-light)}.btn-completar[_ngcontent-%COMP%]:hover{background:var(--hover-blue);transform:translateY(-2px);box-shadow:var(--shadow-medium)}.vencida-text[_ngcontent-%COMP%]{display:block;text-align:center;color:var(--medium-gray);font-weight:600}.encuesta-form[_ngcontent-%COMP%]{background:var(--white);border-radius:12px;box-shadow:var(--shadow-light);padding:32px;border:var(--border-light)}.form-header[_ngcontent-%COMP%]{margin-bottom:30px;border-bottom:2px solid var(--extra-light-blue);padding-bottom:20px}.btn-volver[_ngcontent-%COMP%]{background:var(--medium-gray);color:var(--white);border:none;padding:10px 20px;border-radius:8px;cursor:pointer;margin-bottom:15px;transition:all .3s ease;font-weight:500}.btn-volver[_ngcontent-%COMP%]:hover{background:var(--dark-gray);transform:translateY(-1px)}.form-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0 0 10px;color:var(--primary-blue);font-size:1.8rem;font-weight:700}.form-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;color:#666}.pregunta-group[_ngcontent-%COMP%]{margin-bottom:30px}.pregunta-label[_ngcontent-%COMP%]{display:block;font-weight:600;color:#333;margin-bottom:15px;font-size:16px}.requerida[_ngcontent-%COMP%]{color:#dc3545}.escala-group[_ngcontent-%COMP%]{margin-left:20px}.escala-options[_ngcontent-%COMP%]{display:flex;gap:15px;margin-bottom:10px}.escala-option[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;cursor:pointer}.escala-option[_ngcontent-%COMP%]   input[type=radio][_ngcontent-%COMP%]{margin-bottom:5px}.escala-number[_ngcontent-%COMP%]{font-weight:600;color:#333}.escala-labels[_ngcontent-%COMP%]{display:flex;justify-content:space-between;font-size:12px;color:#666}.multiple-group[_ngcontent-%COMP%]{margin-left:20px}.opcion-label[_ngcontent-%COMP%]{display:block;margin-bottom:10px;cursor:pointer;display:flex;align-items:center;gap:10px}.abierta-group[_ngcontent-%COMP%]{margin-left:20px}.abierta-group[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;padding:12px;border:2px solid #e1e5e9;border-radius:6px;font-family:inherit;font-size:14px;resize:vertical;box-sizing:border-box}.abierta-group[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff}.form-actions[_ngcontent-%COMP%]{text-align:center;margin-top:30px;padding-top:20px;border-top:1px solid #eee}.btn-enviar[_ngcontent-%COMP%]{padding:12px 30px;background:#28a745;color:#fff;border:none;border-radius:6px;font-size:16px;font-weight:600;cursor:pointer}.btn-enviar[_ngcontent-%COMP%]:hover:not(:disabled){background:#218838}.btn-enviar[_ngcontent-%COMP%]:disabled{background:#6c757d;cursor:not-allowed}\"]\n    });\n  }\n  return EncuestasComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}